from pymongo import MongoClient
from bson.int64 import Int64  # 用于 Long 类型
from bson import json_util
import json

# =================== 配置 ===================
# MongoDB 连接信息
client = MongoClient('mongodb://d_eagle3_guangzhou_llt_meas:mongo_Dfdb19c@192.168.0.89:27017/d_eagle3_guangzhou_llt_meas')  # 修改为你的地址
db = client['d_eagle3_guangzhou_llt_meas']                  # 修改为你的数据库名
collection = db['cim_distmeasminute20250601']

# 要更新的 measurementId 列表（字符串）
measurement_ids = [
    "884036329217396772",
"884036329225785347",
"884036329217396745",
"884036329225785383",
"884036329217396777",
"884036329221591043",
"884036329221591057",
"884036329221591056",
"884036329225785364",
"884036329221591045",
"884036329213202456",
"884036329213202463",
"884036329213202464",
"884036329217396771",
"884036329225785349",
"884036329221591068",
"884036329221591061",
"884036329217396739",
"884036329225785357",
"884036329213202478",
"884036329217396747",
"884036329217396770",
"884036329213202476",
"884036329225785374",
"884036329225785348",
"884036329221591072",
"884036329213202469",
"884036329221591082",
"884036329225785345",
"884036329217396738",
"884036329217396736",
"884036329213202468",
"884036329221591069",
"884036329217396769",
"884036329213202472",
"884036329221591059",
"884036329221591060",
"884036329217396774",
"884036329221591055",
"884036329217396763",
"884036329217396751",
"884036329217396750",
"884036329221591041",
"884036329217396753",
"884036329217396749",
"884036329217396752",
"884036329217396748",
"884036329217396760",
"884036329217396757",
"884036329221591079",
"884036329221591058",
"884036329221591066",
"884036329221591088",
"884036329217396740",
"884036329225785356",
"884036329213202460",
"884036329225785376",
"884036329213202477",
"884036329221591062",
"884036329213202461",
"884036329217396767",
"884036329225785386",
"884036329225785351",
"884036329225785350",
"884036329225785390",
"884036329225785377",
"884036329221591071",
"884036329217396779",
"884036329225785387",
"884036329221591073",
"884036329213202470",
"884036329225785362",
"884036329213202457",
"884036329225785370",
"884036329225785384",
"884036329225785380",
"884036329225785389",
"884036329221591081",
"884036329225785373",
"884036329225785369",
"884036329221591040",
"884036329225785371",
"884036329217396737",
"884036329225785361",
"884036329225785388",
"884036329217396742",
"884036329225785375",
"884036329221591065",
"884036329221591044",
"884036329217396773",
"884036329217396766",
"884036329213202459",
"884036329221591051",
"884036329221591052",
"884036329213202480",
"884036329217396778",
"884036329213202479",
"884036329221591063",
"884036329221591076",
"884036329217396744",
"884036329217396776",
"884036329217396746",
"884036329221591067",
"884036329217396775",
"884036329221591042",
"884036329213202473",
"884036329225785358",
"884036329225785379",
"884036329221591050",
"884036329225785359",
"884036329217396761",
"884036329221591053",
"884036329217396762",
"884036329213202475",
"884036329221591070",
"884036329213202474",
"884036329221591077",
"884036329221591078",
"884036329221591048",
"884036329221591046",
"884036329221591047",
"884036329225785354",
"884036329221591087",
"884036329221591083",
"884036329221591084",
"884036329221591085",
"884036329221591086",
"884036329225785344",
"884036329225785352",
"884036329225785353",
"884036329217396755",
"884036329217396756",
"884036329213202467",
"884036329217396765",
"884036329213202471",
"884036329225785367",
"884036329225785368",
"884036329217396759",
"884036329221591075",
"884036329225785378",
"884036329213202458",
"884036329225785365",
"884036329213202462",
"884036329213202455",
"884036329217396754",
"884036329217396741",
"884036329213202466",
"884036329225785346",
"884036329225785360",
"884036329225785355",
"884036329225785366",
"884036329225785372",
"884036329213202465",
"884036329217396758",
"884036329225785363",
"884036329217396768",
"884036329221591049",
"884036329217396743",
"884036329221591064",
"884036329225785382",
"884036329225785381",
"884036329225785385",
"884036329221591054"
]

# ============================================
#               执行更新操作
# ============================================

for str_id in measurement_ids:
    # 转换为 Int64 (MongoDB Long)
    long_id = Int64(str_id)
    filter_query = {"measurementId": long_id}

    # === 第一步：更新 P 相关字段 ===
    update_P_pipeline = [
        {
            "$set": {
                "P": {"$multiply": ["$P_B", 3]},
                "PQ_P_A": {"$multiply": ["$P_B", 3]},
                "PQ_P_A_CALC": {"$multiply": ["$P_B", 3]}
            }
        }
    ]

    try:
        result_P = collection.update_many(filter_query, update_P_pipeline)
        matched_count_P = result_P.matched_count
        modified_count_P = result_P.modified_count

        # === 第二步：更新 Q 相关字段 ===
        update_Q_pipeline = [
            {
                "$set": {
                    "Q": {"$multiply": ["$Q_B", 3]},
                    "PQ_P_R": {"$multiply": ["$Q_B", 3]},
                    "PQ_P_R_CALC": {"$multiply": ["$Q_B", 3]}
                }
            }
        ]
        result_Q = collection.update_many(filter_query, update_Q_pipeline)
        matched_count_Q = result_Q.matched_count
        modified_count_Q = result_Q.modified_count

        # === 输出日志 ===
        print(f"✅ measurementId={str_id}")
        print(f"   P更新 → 匹配: {matched_count_P}, 修改: {modified_count_P}")
        print(f"   Q更新 → 匹配: {matched_count_Q}, 修改: {modified_count_Q}")

    except Exception as e:
        print(f"❌ 更新失败 measurementId={str_id}: {e}")